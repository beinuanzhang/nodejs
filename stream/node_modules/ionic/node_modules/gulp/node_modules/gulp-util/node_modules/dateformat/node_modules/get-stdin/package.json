{
  "_args": [
    [
      "get-stdin@https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
      "/Library/WebServer/Documents/ionic/node_modules/ionic/node_modules/gulp/node_modules/gulp-util/node_modules/dateformat"
    ]
  ],
  "_from": "get-stdin@*",
  "_id": "get-stdin@5.0.1",
  "_inCache": true,
  "_location": "/ionic/gulp/gulp-util/dateformat/get-stdin",
  "_phantomChildren": {},
  "_requested": {
    "name": "get-stdin",
    "raw": "get-stdin@https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ionic/gulp/gulp-util/dateformat"
  ],
  "_resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
  "_shasum": "122e161591e21ff4c52530305693f20e6393a398",
  "_shrinkwrap": null,
  "_spec": "get-stdin@https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
  "_where": "/Library/WebServer/Documents/ionic/node_modules/ionic/node_modules/gulp/node_modules/gulp-util/node_modules/dateformat",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/get-stdin/issues"
  },
  "dependencies": {},
  "description": "Get stdin as a string or buffer",
  "devDependencies": {
    "ava": "*",
    "buffer-equals": "^1.0.3",
    "xo": "*"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/get-stdin#readme",
  "keywords": [
    "buffer",
    "concat",
    "process",
    "read",
    "std",
    "stdin",
    "stdio",
    "stream"
  ],
  "license": "MIT",
  "name": "get-stdin",
  "optionalDependencies": {},
  "readme": "# get-stdin [![Build Status](https://travis-ci.org/sindresorhus/get-stdin.svg?branch=master)](https://travis-ci.org/sindresorhus/get-stdin)\n\n> Get [stdin](https://nodejs.org/api/process.html#process_process_stdin) as a string or buffer\n\n\n## Install\n\n```\n$ npm install --save get-stdin\n```\n\n\n## Usage\n\n```js\n// example.js\nconst getStdin = require('get-stdin');\n\ngetStdin().then(str => {\n\tconsole.log(str);\n\t//=> 'unicorns'\n});\n```\n\n```\n$ echo unicorns | node example.js\nunicorns\n```\n\n\n## API\n\nBoth methods returns a promise that is resolved when the `end` event fires on the `stdin` stream, indicating that there is no more data to be read.\n\n### getStdin()\n\nGet `stdin` as a string.\n\nIn a TTY context, a promise that resolves to an empty string is returned.\n\n### getStdin.buffer()\n\nGet `stdin` as a buffer.\n\nIn a TTY context, a promise that resolves to an empty buffer is returned.\n\n\n## Related\n\n- [get-stream](https://github.com/sindresorhus/get-stream) - Get a stream as a string or buffer\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/get-stdin.git"
  },
  "scripts": {
    "test": "xo && ava test.js && echo unicorns | ava test-real.js"
  },
  "version": "5.0.1",
  "xo": {
    "ignores": [
      "test.js"
    ]
  }
}
